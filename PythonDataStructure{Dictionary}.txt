Dictionaries are used to store data values in key:value pairs.

A disctioary isa collection which is ordered*, changeable and do not allow duplicates.

Dictionaries are written with curly brackets, and have keys and values.

Example:

thisdict = {
                "brand": "Ford",
                "model": "Mustang",
                "year": 1964
            }
            
print(thisdict)


Dictionary Items:

Dictionary items are ordered, changeable(means that we can add or remove item after the dictionary is created), and does not allow duplicates.
Dictionary items are presented in key:value pairs, and can be referred to by using the key name.

Example:
thisdict = {
                "brand": "Frod",
                "model": "Mustang",
                "year": 1964
            }
            
print(thisdict["brand"])


Dictionary & Duplicate:

 Dictionaries cannot have two items with the same key.

Dictionary length:

The length of the dictionary can be found using the len() function.

Accessing the dictionary item:

The Dictionary item can be either accessed by putting the key name in square bracket or by using the get() method.

Example:
thisdict = {
                "brand": "Frod",
                "model": "Mustang",
                "year": 1964
            }
            
print(thisdict["brand"]) (OR)

thisdict = {
                "brand": "Frod",
                "model": "Mustang",
                "year": 1964
            }
x = thisdict.get("model")            
print(x)

Change Values
You can change the value of a specific item by referring to its key name:

Example:
Change the "year" to 2018:

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
thisdict["year"] = 2018

Update Dictionary
The update() method will update the dictionary with the items from the given argument.

The argument must be a dictionary, or an iterable object with key:value pairs.

Example:

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
thisdict.update({"year": 2020})

print(thisdict)


Adding Items

Adding an item to the dictionary is done by using a new index key and assigning a value to it:

Example
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
thisdict["color"] = "red"
print(thisdict)

Method:2 Update Dictionary

Example
Add a color item to the dictionary by using the update() method:

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
thisdict.update({"color": "red"})


Removing Items:

The pop() method removes the item with the specified key name:

Example:

thisdict = {
                "brand":"Ford",
                "model":"Mustang",
                "year":"1964"
            }
thisdict.pop("model")
print(thisdict)

Output:
{'brand':'Ford', 'year':1964}


Method 2: popitem()

The popitem() method removes the last inserted item.


thisdict = {
                "brand":"Ford",
                "model":"Mustang",
                "year":"1964"
            }
thisdict.popitem()
print(thisdict)

Output:
{'brand':'Ford', 'model':'Mustang'}

Method 3: del keyword:

The del keyword removes the item with the specified key name:


thisdict = {
                "brand":"Ford",
                "model":"Mustang",
                "year":"1964"
            }
del thisdict["model"]
print(thisdict)

Output:
{'brand':'Ford', 'year':1964}

The del keyword can also delete the dictionary completely:


thisdict = {
                "brand":"Ford",
                "model":"Mustang",
                "year":"1964"
            }
del thisdict()
print(thisdict) -->This will cause an error because "thisdict" no longer exists.


Clear(): 

The clear() method empties the dictionary completely and kept it empty.

